// Code generated by ent, DO NOT EDIT.

package ent

import (
	"nursing_api/ent/schema"
	"nursing_api/ent/user"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUserStatus is the schema descriptor for user_status field.
	userDescUserStatus := userFields[3].Descriptor()
	// user.DefaultUserStatus holds the default value on creation for the user_status field.
	user.DefaultUserStatus = userDescUserStatus.Default.(string)
	// userDescUserType is the schema descriptor for user_type field.
	userDescUserType := userFields[4].Descriptor()
	// user.DefaultUserType holds the default value on creation for the user_type field.
	user.DefaultUserType = userDescUserType.Default.(string)
	// userDescFailCount is the schema descriptor for fail_count field.
	userDescFailCount := userFields[5].Descriptor()
	// user.DefaultFailCount holds the default value on creation for the fail_count field.
	user.DefaultFailCount = userDescFailCount.Default.(int)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[7].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
