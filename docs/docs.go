// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "박재욱",
            "email": "lafin716@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/signin": {
            "post": {
                "description": "회원정보로 인증을 수행하는 엔드포인트. 로그인 성공 시 JWT 토큰 반환.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "로그인 인증",
                "parameters": [
                    {
                        "description": "로그인 정보 (이메일, 비밀번호)",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SignInRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/auth/signout": {
            "post": {
                "description": "로그아웃 처리, 로그인 된 상태에서만 사용가능 (JWT토큰 폐기처리)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "로그아웃",
                "responses": {}
            }
        },
        "/auth/signup": {
            "post": {
                "description": "회원가입을 처리하는 엔드포인트. 회원가입 성공 시 JWT 토큰 반환.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "회원가입",
                "parameters": [
                    {
                        "description": "회원가입 정보 (이름, 이메일, 비밀번호)",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SignUpRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/medicine/search": {
            "get": {
                "description": "의약품을 검색하는 엔드포인트. 공공 API를 통해 조회하며, 1번 조회 시 DB에 캐싱처리함",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "의약품 검색",
                "parameters": [
                    {
                        "type": "string",
                        "description": "의약품 이름(like 검색)",
                        "name": "dto",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/plan": {
            "get": {
                "description": "해당 날짜의 복약계획을 조회하는 엔드포인트, 복용상태 및 복용시간을 같이 응답한다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "날짜별 복약 계획",
                "parameters": [
                    {
                        "type": "string",
                        "description": "조회날짜 (YYYY-MM-DD)",
                        "name": "current_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "post": {
                "description": "복약계획을 생성하는 엔드포인트",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "복약 계획 등록",
                "parameters": [
                    {
                        "description": "복용계획정보",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/plan.AddPlanRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/plan/:id": {
            "delete": {
                "description": "복약계획을 삭제하는 엔드포인트",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "복약 계획 삭제",
                "responses": {}
            }
        },
        "/takehistory": {
            "get": {
                "description": "복용내역을 조회하는 엔드포인트",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "복용내역 목록",
                "parameters": [
                    {
                        "type": "string",
                        "name": "target_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/takehistory/:id": {
            "get": {
                "description": "복용내역 상세를 조회하는 엔드포인트",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "복용내역 상세",
                "responses": {}
            }
        },
        "/user/leave": {
            "delete": {
                "description": "회원탈퇴 엔드포인트",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "회원탈퇴",
                "responses": {}
            }
        },
        "/user/me": {
            "get": {
                "description": "회원정보를 조회하는 엔드포인트",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "내 정보 조회",
                "responses": {}
            }
        }
    },
    "definitions": {
        "auth.SignInRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "auto_login": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.SignUpRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 2
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "plan.AddMedicineRequest": {
            "type": "object",
            "properties": {
                "medicine_id": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "take_amount": {
                    "type": "number"
                },
                "take_unit": {
                    "type": "string"
                }
            }
        },
        "plan.AddPlanRequest": {
            "type": "object",
            "required": [
                "hospital",
                "name",
                "started_at",
                "take_days"
            ],
            "properties": {
                "hospital": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "started_at": {
                    "type": "string"
                },
                "take_days": {
                    "type": "integer"
                },
                "timezones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plan.AddTimezoneRequest"
                    }
                }
            }
        },
        "plan.AddTimezoneRequest": {
            "type": "object",
            "required": [
                "timezone_id"
            ],
            "properties": {
                "medicines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plan.AddMedicineRequest"
                    }
                },
                "timezone_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "간병관리 서비스 API",
	Description:      "간병관리 서비스 API입니다.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
