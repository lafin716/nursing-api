// Code generated by ent, DO NOT EDIT.

package prescriptionitem

import (
	"nursing_api/pkg/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldID, id))
}

// PrescriptionID applies equality check predicate on the "prescription_id" field. It's identical to PrescriptionIDEQ.
func PrescriptionID(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldPrescriptionID, v))
}

// TimezoneID applies equality check predicate on the "timezone_id" field. It's identical to TimezoneIDEQ.
func TimezoneID(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTimezoneID, v))
}

// MedicineID applies equality check predicate on the "medicine_id" field. It's identical to MedicineIDEQ.
func MedicineID(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMedicineID, v))
}

// MedicineName applies equality check predicate on the "medicine_name" field. It's identical to MedicineNameEQ.
func MedicineName(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMedicineName, v))
}

// TimezoneName applies equality check predicate on the "timezone_name" field. It's identical to TimezoneNameEQ.
func TimezoneName(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTimezoneName, v))
}

// Midday applies equality check predicate on the "midday" field. It's identical to MiddayEQ.
func Midday(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMidday, v))
}

// Hour applies equality check predicate on the "hour" field. It's identical to HourEQ.
func Hour(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldHour, v))
}

// Minute applies equality check predicate on the "minute" field. It's identical to MinuteEQ.
func Minute(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMinute, v))
}

// TotalAmount applies equality check predicate on the "total_amount" field. It's identical to TotalAmountEQ.
func TotalAmount(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTotalAmount, v))
}

// RemainAmount applies equality check predicate on the "remain_amount" field. It's identical to RemainAmountEQ.
func RemainAmount(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldRemainAmount, v))
}

// TakeAmount applies equality check predicate on the "take_amount" field. It's identical to TakeAmountEQ.
func TakeAmount(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTakeAmount, v))
}

// MedicineUnit applies equality check predicate on the "medicine_unit" field. It's identical to MedicineUnitEQ.
func MedicineUnit(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMedicineUnit, v))
}

// Memo applies equality check predicate on the "memo" field. It's identical to MemoEQ.
func Memo(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMemo, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldUpdatedAt, v))
}

// PrescriptionIDEQ applies the EQ predicate on the "prescription_id" field.
func PrescriptionIDEQ(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldPrescriptionID, v))
}

// PrescriptionIDNEQ applies the NEQ predicate on the "prescription_id" field.
func PrescriptionIDNEQ(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldPrescriptionID, v))
}

// PrescriptionIDIn applies the In predicate on the "prescription_id" field.
func PrescriptionIDIn(vs ...uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldPrescriptionID, vs...))
}

// PrescriptionIDNotIn applies the NotIn predicate on the "prescription_id" field.
func PrescriptionIDNotIn(vs ...uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldPrescriptionID, vs...))
}

// TimezoneIDEQ applies the EQ predicate on the "timezone_id" field.
func TimezoneIDEQ(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTimezoneID, v))
}

// TimezoneIDNEQ applies the NEQ predicate on the "timezone_id" field.
func TimezoneIDNEQ(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldTimezoneID, v))
}

// TimezoneIDIn applies the In predicate on the "timezone_id" field.
func TimezoneIDIn(vs ...uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldTimezoneID, vs...))
}

// TimezoneIDNotIn applies the NotIn predicate on the "timezone_id" field.
func TimezoneIDNotIn(vs ...uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldTimezoneID, vs...))
}

// TimezoneIDGT applies the GT predicate on the "timezone_id" field.
func TimezoneIDGT(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldTimezoneID, v))
}

// TimezoneIDGTE applies the GTE predicate on the "timezone_id" field.
func TimezoneIDGTE(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldTimezoneID, v))
}

// TimezoneIDLT applies the LT predicate on the "timezone_id" field.
func TimezoneIDLT(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldTimezoneID, v))
}

// TimezoneIDLTE applies the LTE predicate on the "timezone_id" field.
func TimezoneIDLTE(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldTimezoneID, v))
}

// MedicineIDEQ applies the EQ predicate on the "medicine_id" field.
func MedicineIDEQ(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMedicineID, v))
}

// MedicineIDNEQ applies the NEQ predicate on the "medicine_id" field.
func MedicineIDNEQ(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldMedicineID, v))
}

// MedicineIDIn applies the In predicate on the "medicine_id" field.
func MedicineIDIn(vs ...uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldMedicineID, vs...))
}

// MedicineIDNotIn applies the NotIn predicate on the "medicine_id" field.
func MedicineIDNotIn(vs ...uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldMedicineID, vs...))
}

// MedicineIDGT applies the GT predicate on the "medicine_id" field.
func MedicineIDGT(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldMedicineID, v))
}

// MedicineIDGTE applies the GTE predicate on the "medicine_id" field.
func MedicineIDGTE(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldMedicineID, v))
}

// MedicineIDLT applies the LT predicate on the "medicine_id" field.
func MedicineIDLT(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldMedicineID, v))
}

// MedicineIDLTE applies the LTE predicate on the "medicine_id" field.
func MedicineIDLTE(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldMedicineID, v))
}

// MedicineNameEQ applies the EQ predicate on the "medicine_name" field.
func MedicineNameEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMedicineName, v))
}

// MedicineNameNEQ applies the NEQ predicate on the "medicine_name" field.
func MedicineNameNEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldMedicineName, v))
}

// MedicineNameIn applies the In predicate on the "medicine_name" field.
func MedicineNameIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldMedicineName, vs...))
}

// MedicineNameNotIn applies the NotIn predicate on the "medicine_name" field.
func MedicineNameNotIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldMedicineName, vs...))
}

// MedicineNameGT applies the GT predicate on the "medicine_name" field.
func MedicineNameGT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldMedicineName, v))
}

// MedicineNameGTE applies the GTE predicate on the "medicine_name" field.
func MedicineNameGTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldMedicineName, v))
}

// MedicineNameLT applies the LT predicate on the "medicine_name" field.
func MedicineNameLT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldMedicineName, v))
}

// MedicineNameLTE applies the LTE predicate on the "medicine_name" field.
func MedicineNameLTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldMedicineName, v))
}

// MedicineNameContains applies the Contains predicate on the "medicine_name" field.
func MedicineNameContains(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContains(FieldMedicineName, v))
}

// MedicineNameHasPrefix applies the HasPrefix predicate on the "medicine_name" field.
func MedicineNameHasPrefix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasPrefix(FieldMedicineName, v))
}

// MedicineNameHasSuffix applies the HasSuffix predicate on the "medicine_name" field.
func MedicineNameHasSuffix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasSuffix(FieldMedicineName, v))
}

// MedicineNameEqualFold applies the EqualFold predicate on the "medicine_name" field.
func MedicineNameEqualFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEqualFold(FieldMedicineName, v))
}

// MedicineNameContainsFold applies the ContainsFold predicate on the "medicine_name" field.
func MedicineNameContainsFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContainsFold(FieldMedicineName, v))
}

// TimezoneNameEQ applies the EQ predicate on the "timezone_name" field.
func TimezoneNameEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTimezoneName, v))
}

// TimezoneNameNEQ applies the NEQ predicate on the "timezone_name" field.
func TimezoneNameNEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldTimezoneName, v))
}

// TimezoneNameIn applies the In predicate on the "timezone_name" field.
func TimezoneNameIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldTimezoneName, vs...))
}

// TimezoneNameNotIn applies the NotIn predicate on the "timezone_name" field.
func TimezoneNameNotIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldTimezoneName, vs...))
}

// TimezoneNameGT applies the GT predicate on the "timezone_name" field.
func TimezoneNameGT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldTimezoneName, v))
}

// TimezoneNameGTE applies the GTE predicate on the "timezone_name" field.
func TimezoneNameGTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldTimezoneName, v))
}

// TimezoneNameLT applies the LT predicate on the "timezone_name" field.
func TimezoneNameLT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldTimezoneName, v))
}

// TimezoneNameLTE applies the LTE predicate on the "timezone_name" field.
func TimezoneNameLTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldTimezoneName, v))
}

// TimezoneNameContains applies the Contains predicate on the "timezone_name" field.
func TimezoneNameContains(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContains(FieldTimezoneName, v))
}

// TimezoneNameHasPrefix applies the HasPrefix predicate on the "timezone_name" field.
func TimezoneNameHasPrefix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasPrefix(FieldTimezoneName, v))
}

// TimezoneNameHasSuffix applies the HasSuffix predicate on the "timezone_name" field.
func TimezoneNameHasSuffix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasSuffix(FieldTimezoneName, v))
}

// TimezoneNameIsNil applies the IsNil predicate on the "timezone_name" field.
func TimezoneNameIsNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIsNull(FieldTimezoneName))
}

// TimezoneNameNotNil applies the NotNil predicate on the "timezone_name" field.
func TimezoneNameNotNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotNull(FieldTimezoneName))
}

// TimezoneNameEqualFold applies the EqualFold predicate on the "timezone_name" field.
func TimezoneNameEqualFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEqualFold(FieldTimezoneName, v))
}

// TimezoneNameContainsFold applies the ContainsFold predicate on the "timezone_name" field.
func TimezoneNameContainsFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContainsFold(FieldTimezoneName, v))
}

// MiddayEQ applies the EQ predicate on the "midday" field.
func MiddayEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMidday, v))
}

// MiddayNEQ applies the NEQ predicate on the "midday" field.
func MiddayNEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldMidday, v))
}

// MiddayIn applies the In predicate on the "midday" field.
func MiddayIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldMidday, vs...))
}

// MiddayNotIn applies the NotIn predicate on the "midday" field.
func MiddayNotIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldMidday, vs...))
}

// MiddayGT applies the GT predicate on the "midday" field.
func MiddayGT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldMidday, v))
}

// MiddayGTE applies the GTE predicate on the "midday" field.
func MiddayGTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldMidday, v))
}

// MiddayLT applies the LT predicate on the "midday" field.
func MiddayLT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldMidday, v))
}

// MiddayLTE applies the LTE predicate on the "midday" field.
func MiddayLTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldMidday, v))
}

// MiddayContains applies the Contains predicate on the "midday" field.
func MiddayContains(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContains(FieldMidday, v))
}

// MiddayHasPrefix applies the HasPrefix predicate on the "midday" field.
func MiddayHasPrefix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasPrefix(FieldMidday, v))
}

// MiddayHasSuffix applies the HasSuffix predicate on the "midday" field.
func MiddayHasSuffix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasSuffix(FieldMidday, v))
}

// MiddayEqualFold applies the EqualFold predicate on the "midday" field.
func MiddayEqualFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEqualFold(FieldMidday, v))
}

// MiddayContainsFold applies the ContainsFold predicate on the "midday" field.
func MiddayContainsFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContainsFold(FieldMidday, v))
}

// HourEQ applies the EQ predicate on the "hour" field.
func HourEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldHour, v))
}

// HourNEQ applies the NEQ predicate on the "hour" field.
func HourNEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldHour, v))
}

// HourIn applies the In predicate on the "hour" field.
func HourIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldHour, vs...))
}

// HourNotIn applies the NotIn predicate on the "hour" field.
func HourNotIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldHour, vs...))
}

// HourGT applies the GT predicate on the "hour" field.
func HourGT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldHour, v))
}

// HourGTE applies the GTE predicate on the "hour" field.
func HourGTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldHour, v))
}

// HourLT applies the LT predicate on the "hour" field.
func HourLT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldHour, v))
}

// HourLTE applies the LTE predicate on the "hour" field.
func HourLTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldHour, v))
}

// HourContains applies the Contains predicate on the "hour" field.
func HourContains(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContains(FieldHour, v))
}

// HourHasPrefix applies the HasPrefix predicate on the "hour" field.
func HourHasPrefix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasPrefix(FieldHour, v))
}

// HourHasSuffix applies the HasSuffix predicate on the "hour" field.
func HourHasSuffix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasSuffix(FieldHour, v))
}

// HourEqualFold applies the EqualFold predicate on the "hour" field.
func HourEqualFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEqualFold(FieldHour, v))
}

// HourContainsFold applies the ContainsFold predicate on the "hour" field.
func HourContainsFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContainsFold(FieldHour, v))
}

// MinuteEQ applies the EQ predicate on the "minute" field.
func MinuteEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMinute, v))
}

// MinuteNEQ applies the NEQ predicate on the "minute" field.
func MinuteNEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldMinute, v))
}

// MinuteIn applies the In predicate on the "minute" field.
func MinuteIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldMinute, vs...))
}

// MinuteNotIn applies the NotIn predicate on the "minute" field.
func MinuteNotIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldMinute, vs...))
}

// MinuteGT applies the GT predicate on the "minute" field.
func MinuteGT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldMinute, v))
}

// MinuteGTE applies the GTE predicate on the "minute" field.
func MinuteGTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldMinute, v))
}

// MinuteLT applies the LT predicate on the "minute" field.
func MinuteLT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldMinute, v))
}

// MinuteLTE applies the LTE predicate on the "minute" field.
func MinuteLTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldMinute, v))
}

// MinuteContains applies the Contains predicate on the "minute" field.
func MinuteContains(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContains(FieldMinute, v))
}

// MinuteHasPrefix applies the HasPrefix predicate on the "minute" field.
func MinuteHasPrefix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasPrefix(FieldMinute, v))
}

// MinuteHasSuffix applies the HasSuffix predicate on the "minute" field.
func MinuteHasSuffix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasSuffix(FieldMinute, v))
}

// MinuteEqualFold applies the EqualFold predicate on the "minute" field.
func MinuteEqualFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEqualFold(FieldMinute, v))
}

// MinuteContainsFold applies the ContainsFold predicate on the "minute" field.
func MinuteContainsFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContainsFold(FieldMinute, v))
}

// TotalAmountEQ applies the EQ predicate on the "total_amount" field.
func TotalAmountEQ(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTotalAmount, v))
}

// TotalAmountNEQ applies the NEQ predicate on the "total_amount" field.
func TotalAmountNEQ(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldTotalAmount, v))
}

// TotalAmountIn applies the In predicate on the "total_amount" field.
func TotalAmountIn(vs ...float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldTotalAmount, vs...))
}

// TotalAmountNotIn applies the NotIn predicate on the "total_amount" field.
func TotalAmountNotIn(vs ...float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldTotalAmount, vs...))
}

// TotalAmountGT applies the GT predicate on the "total_amount" field.
func TotalAmountGT(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldTotalAmount, v))
}

// TotalAmountGTE applies the GTE predicate on the "total_amount" field.
func TotalAmountGTE(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldTotalAmount, v))
}

// TotalAmountLT applies the LT predicate on the "total_amount" field.
func TotalAmountLT(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldTotalAmount, v))
}

// TotalAmountLTE applies the LTE predicate on the "total_amount" field.
func TotalAmountLTE(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldTotalAmount, v))
}

// RemainAmountEQ applies the EQ predicate on the "remain_amount" field.
func RemainAmountEQ(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldRemainAmount, v))
}

// RemainAmountNEQ applies the NEQ predicate on the "remain_amount" field.
func RemainAmountNEQ(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldRemainAmount, v))
}

// RemainAmountIn applies the In predicate on the "remain_amount" field.
func RemainAmountIn(vs ...float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldRemainAmount, vs...))
}

// RemainAmountNotIn applies the NotIn predicate on the "remain_amount" field.
func RemainAmountNotIn(vs ...float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldRemainAmount, vs...))
}

// RemainAmountGT applies the GT predicate on the "remain_amount" field.
func RemainAmountGT(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldRemainAmount, v))
}

// RemainAmountGTE applies the GTE predicate on the "remain_amount" field.
func RemainAmountGTE(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldRemainAmount, v))
}

// RemainAmountLT applies the LT predicate on the "remain_amount" field.
func RemainAmountLT(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldRemainAmount, v))
}

// RemainAmountLTE applies the LTE predicate on the "remain_amount" field.
func RemainAmountLTE(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldRemainAmount, v))
}

// TakeAmountEQ applies the EQ predicate on the "take_amount" field.
func TakeAmountEQ(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTakeAmount, v))
}

// TakeAmountNEQ applies the NEQ predicate on the "take_amount" field.
func TakeAmountNEQ(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldTakeAmount, v))
}

// TakeAmountIn applies the In predicate on the "take_amount" field.
func TakeAmountIn(vs ...float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldTakeAmount, vs...))
}

// TakeAmountNotIn applies the NotIn predicate on the "take_amount" field.
func TakeAmountNotIn(vs ...float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldTakeAmount, vs...))
}

// TakeAmountGT applies the GT predicate on the "take_amount" field.
func TakeAmountGT(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldTakeAmount, v))
}

// TakeAmountGTE applies the GTE predicate on the "take_amount" field.
func TakeAmountGTE(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldTakeAmount, v))
}

// TakeAmountLT applies the LT predicate on the "take_amount" field.
func TakeAmountLT(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldTakeAmount, v))
}

// TakeAmountLTE applies the LTE predicate on the "take_amount" field.
func TakeAmountLTE(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldTakeAmount, v))
}

// MedicineUnitEQ applies the EQ predicate on the "medicine_unit" field.
func MedicineUnitEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMedicineUnit, v))
}

// MedicineUnitNEQ applies the NEQ predicate on the "medicine_unit" field.
func MedicineUnitNEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldMedicineUnit, v))
}

// MedicineUnitIn applies the In predicate on the "medicine_unit" field.
func MedicineUnitIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldMedicineUnit, vs...))
}

// MedicineUnitNotIn applies the NotIn predicate on the "medicine_unit" field.
func MedicineUnitNotIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldMedicineUnit, vs...))
}

// MedicineUnitGT applies the GT predicate on the "medicine_unit" field.
func MedicineUnitGT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldMedicineUnit, v))
}

// MedicineUnitGTE applies the GTE predicate on the "medicine_unit" field.
func MedicineUnitGTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldMedicineUnit, v))
}

// MedicineUnitLT applies the LT predicate on the "medicine_unit" field.
func MedicineUnitLT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldMedicineUnit, v))
}

// MedicineUnitLTE applies the LTE predicate on the "medicine_unit" field.
func MedicineUnitLTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldMedicineUnit, v))
}

// MedicineUnitContains applies the Contains predicate on the "medicine_unit" field.
func MedicineUnitContains(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContains(FieldMedicineUnit, v))
}

// MedicineUnitHasPrefix applies the HasPrefix predicate on the "medicine_unit" field.
func MedicineUnitHasPrefix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasPrefix(FieldMedicineUnit, v))
}

// MedicineUnitHasSuffix applies the HasSuffix predicate on the "medicine_unit" field.
func MedicineUnitHasSuffix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasSuffix(FieldMedicineUnit, v))
}

// MedicineUnitIsNil applies the IsNil predicate on the "medicine_unit" field.
func MedicineUnitIsNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIsNull(FieldMedicineUnit))
}

// MedicineUnitNotNil applies the NotNil predicate on the "medicine_unit" field.
func MedicineUnitNotNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotNull(FieldMedicineUnit))
}

// MedicineUnitEqualFold applies the EqualFold predicate on the "medicine_unit" field.
func MedicineUnitEqualFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEqualFold(FieldMedicineUnit, v))
}

// MedicineUnitContainsFold applies the ContainsFold predicate on the "medicine_unit" field.
func MedicineUnitContainsFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContainsFold(FieldMedicineUnit, v))
}

// MemoEQ applies the EQ predicate on the "memo" field.
func MemoEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMemo, v))
}

// MemoNEQ applies the NEQ predicate on the "memo" field.
func MemoNEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldMemo, v))
}

// MemoIn applies the In predicate on the "memo" field.
func MemoIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldMemo, vs...))
}

// MemoNotIn applies the NotIn predicate on the "memo" field.
func MemoNotIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldMemo, vs...))
}

// MemoGT applies the GT predicate on the "memo" field.
func MemoGT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldMemo, v))
}

// MemoGTE applies the GTE predicate on the "memo" field.
func MemoGTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldMemo, v))
}

// MemoLT applies the LT predicate on the "memo" field.
func MemoLT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldMemo, v))
}

// MemoLTE applies the LTE predicate on the "memo" field.
func MemoLTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldMemo, v))
}

// MemoContains applies the Contains predicate on the "memo" field.
func MemoContains(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContains(FieldMemo, v))
}

// MemoHasPrefix applies the HasPrefix predicate on the "memo" field.
func MemoHasPrefix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasPrefix(FieldMemo, v))
}

// MemoHasSuffix applies the HasSuffix predicate on the "memo" field.
func MemoHasSuffix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasSuffix(FieldMemo, v))
}

// MemoIsNil applies the IsNil predicate on the "memo" field.
func MemoIsNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIsNull(FieldMemo))
}

// MemoNotNil applies the NotNil predicate on the "memo" field.
func MemoNotNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotNull(FieldMemo))
}

// MemoEqualFold applies the EqualFold predicate on the "memo" field.
func MemoEqualFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEqualFold(FieldMemo, v))
}

// MemoContainsFold applies the ContainsFold predicate on the "memo" field.
func MemoContainsFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContainsFold(FieldMemo, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotNull(FieldUpdatedAt))
}

// HasPrescription applies the HasEdge predicate on the "prescription" edge.
func HasPrescription() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, PrescriptionTable, PrescriptionColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPrescriptionWith applies the HasEdge predicate on the "prescription" edge with a given conditions (other predicates).
func HasPrescriptionWith(preds ...predicate.Prescription) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(func(s *sql.Selector) {
		step := newPrescriptionStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasTakeHistoryItem applies the HasEdge predicate on the "take_history_item" edge.
func HasTakeHistoryItem() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, TakeHistoryItemTable, TakeHistoryItemColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTakeHistoryItemWith applies the HasEdge predicate on the "take_history_item" edge with a given conditions (other predicates).
func HasTakeHistoryItemWith(preds ...predicate.TakeHistoryItem) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(func(s *sql.Selector) {
		step := newTakeHistoryItemStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PrescriptionItem) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PrescriptionItem) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PrescriptionItem) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.NotPredicates(p))
}
