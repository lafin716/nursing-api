// Code generated by ent, DO NOT EDIT.

package prescriptionitem

import (
	"nursing_api/pkg/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldID, id))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldUserID, v))
}

// PrescriptionID applies equality check predicate on the "prescription_id" field. It's identical to PrescriptionIDEQ.
func PrescriptionID(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldPrescriptionID, v))
}

// MedicineName applies equality check predicate on the "medicine_name" field. It's identical to MedicineNameEQ.
func MedicineName(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMedicineName, v))
}

// TakeTimeZone applies equality check predicate on the "take_time_zone" field. It's identical to TakeTimeZoneEQ.
func TakeTimeZone(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTakeTimeZone, v))
}

// TakeMoment applies equality check predicate on the "take_moment" field. It's identical to TakeMomentEQ.
func TakeMoment(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTakeMoment, v))
}

// TakeEtc applies equality check predicate on the "take_etc" field. It's identical to TakeEtcEQ.
func TakeEtc(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTakeEtc, v))
}

// TakeAmount applies equality check predicate on the "take_amount" field. It's identical to TakeAmountEQ.
func TakeAmount(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTakeAmount, v))
}

// MedicineUnit applies equality check predicate on the "medicine_unit" field. It's identical to MedicineUnitEQ.
func MedicineUnit(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMedicineUnit, v))
}

// Memo applies equality check predicate on the "memo" field. It's identical to MemoEQ.
func Memo(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMemo, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldUpdatedAt, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldUserID, v))
}

// PrescriptionIDEQ applies the EQ predicate on the "prescription_id" field.
func PrescriptionIDEQ(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldPrescriptionID, v))
}

// PrescriptionIDNEQ applies the NEQ predicate on the "prescription_id" field.
func PrescriptionIDNEQ(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldPrescriptionID, v))
}

// PrescriptionIDIn applies the In predicate on the "prescription_id" field.
func PrescriptionIDIn(vs ...uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldPrescriptionID, vs...))
}

// PrescriptionIDNotIn applies the NotIn predicate on the "prescription_id" field.
func PrescriptionIDNotIn(vs ...uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldPrescriptionID, vs...))
}

// PrescriptionIDGT applies the GT predicate on the "prescription_id" field.
func PrescriptionIDGT(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldPrescriptionID, v))
}

// PrescriptionIDGTE applies the GTE predicate on the "prescription_id" field.
func PrescriptionIDGTE(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldPrescriptionID, v))
}

// PrescriptionIDLT applies the LT predicate on the "prescription_id" field.
func PrescriptionIDLT(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldPrescriptionID, v))
}

// PrescriptionIDLTE applies the LTE predicate on the "prescription_id" field.
func PrescriptionIDLTE(v uuid.UUID) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldPrescriptionID, v))
}

// MedicineNameEQ applies the EQ predicate on the "medicine_name" field.
func MedicineNameEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMedicineName, v))
}

// MedicineNameNEQ applies the NEQ predicate on the "medicine_name" field.
func MedicineNameNEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldMedicineName, v))
}

// MedicineNameIn applies the In predicate on the "medicine_name" field.
func MedicineNameIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldMedicineName, vs...))
}

// MedicineNameNotIn applies the NotIn predicate on the "medicine_name" field.
func MedicineNameNotIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldMedicineName, vs...))
}

// MedicineNameGT applies the GT predicate on the "medicine_name" field.
func MedicineNameGT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldMedicineName, v))
}

// MedicineNameGTE applies the GTE predicate on the "medicine_name" field.
func MedicineNameGTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldMedicineName, v))
}

// MedicineNameLT applies the LT predicate on the "medicine_name" field.
func MedicineNameLT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldMedicineName, v))
}

// MedicineNameLTE applies the LTE predicate on the "medicine_name" field.
func MedicineNameLTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldMedicineName, v))
}

// MedicineNameContains applies the Contains predicate on the "medicine_name" field.
func MedicineNameContains(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContains(FieldMedicineName, v))
}

// MedicineNameHasPrefix applies the HasPrefix predicate on the "medicine_name" field.
func MedicineNameHasPrefix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasPrefix(FieldMedicineName, v))
}

// MedicineNameHasSuffix applies the HasSuffix predicate on the "medicine_name" field.
func MedicineNameHasSuffix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasSuffix(FieldMedicineName, v))
}

// MedicineNameEqualFold applies the EqualFold predicate on the "medicine_name" field.
func MedicineNameEqualFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEqualFold(FieldMedicineName, v))
}

// MedicineNameContainsFold applies the ContainsFold predicate on the "medicine_name" field.
func MedicineNameContainsFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContainsFold(FieldMedicineName, v))
}

// TakeTimeZoneEQ applies the EQ predicate on the "take_time_zone" field.
func TakeTimeZoneEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTakeTimeZone, v))
}

// TakeTimeZoneNEQ applies the NEQ predicate on the "take_time_zone" field.
func TakeTimeZoneNEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldTakeTimeZone, v))
}

// TakeTimeZoneIn applies the In predicate on the "take_time_zone" field.
func TakeTimeZoneIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldTakeTimeZone, vs...))
}

// TakeTimeZoneNotIn applies the NotIn predicate on the "take_time_zone" field.
func TakeTimeZoneNotIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldTakeTimeZone, vs...))
}

// TakeTimeZoneGT applies the GT predicate on the "take_time_zone" field.
func TakeTimeZoneGT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldTakeTimeZone, v))
}

// TakeTimeZoneGTE applies the GTE predicate on the "take_time_zone" field.
func TakeTimeZoneGTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldTakeTimeZone, v))
}

// TakeTimeZoneLT applies the LT predicate on the "take_time_zone" field.
func TakeTimeZoneLT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldTakeTimeZone, v))
}

// TakeTimeZoneLTE applies the LTE predicate on the "take_time_zone" field.
func TakeTimeZoneLTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldTakeTimeZone, v))
}

// TakeTimeZoneContains applies the Contains predicate on the "take_time_zone" field.
func TakeTimeZoneContains(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContains(FieldTakeTimeZone, v))
}

// TakeTimeZoneHasPrefix applies the HasPrefix predicate on the "take_time_zone" field.
func TakeTimeZoneHasPrefix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasPrefix(FieldTakeTimeZone, v))
}

// TakeTimeZoneHasSuffix applies the HasSuffix predicate on the "take_time_zone" field.
func TakeTimeZoneHasSuffix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasSuffix(FieldTakeTimeZone, v))
}

// TakeTimeZoneIsNil applies the IsNil predicate on the "take_time_zone" field.
func TakeTimeZoneIsNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIsNull(FieldTakeTimeZone))
}

// TakeTimeZoneNotNil applies the NotNil predicate on the "take_time_zone" field.
func TakeTimeZoneNotNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotNull(FieldTakeTimeZone))
}

// TakeTimeZoneEqualFold applies the EqualFold predicate on the "take_time_zone" field.
func TakeTimeZoneEqualFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEqualFold(FieldTakeTimeZone, v))
}

// TakeTimeZoneContainsFold applies the ContainsFold predicate on the "take_time_zone" field.
func TakeTimeZoneContainsFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContainsFold(FieldTakeTimeZone, v))
}

// TakeMomentEQ applies the EQ predicate on the "take_moment" field.
func TakeMomentEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTakeMoment, v))
}

// TakeMomentNEQ applies the NEQ predicate on the "take_moment" field.
func TakeMomentNEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldTakeMoment, v))
}

// TakeMomentIn applies the In predicate on the "take_moment" field.
func TakeMomentIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldTakeMoment, vs...))
}

// TakeMomentNotIn applies the NotIn predicate on the "take_moment" field.
func TakeMomentNotIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldTakeMoment, vs...))
}

// TakeMomentGT applies the GT predicate on the "take_moment" field.
func TakeMomentGT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldTakeMoment, v))
}

// TakeMomentGTE applies the GTE predicate on the "take_moment" field.
func TakeMomentGTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldTakeMoment, v))
}

// TakeMomentLT applies the LT predicate on the "take_moment" field.
func TakeMomentLT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldTakeMoment, v))
}

// TakeMomentLTE applies the LTE predicate on the "take_moment" field.
func TakeMomentLTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldTakeMoment, v))
}

// TakeMomentContains applies the Contains predicate on the "take_moment" field.
func TakeMomentContains(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContains(FieldTakeMoment, v))
}

// TakeMomentHasPrefix applies the HasPrefix predicate on the "take_moment" field.
func TakeMomentHasPrefix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasPrefix(FieldTakeMoment, v))
}

// TakeMomentHasSuffix applies the HasSuffix predicate on the "take_moment" field.
func TakeMomentHasSuffix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasSuffix(FieldTakeMoment, v))
}

// TakeMomentIsNil applies the IsNil predicate on the "take_moment" field.
func TakeMomentIsNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIsNull(FieldTakeMoment))
}

// TakeMomentNotNil applies the NotNil predicate on the "take_moment" field.
func TakeMomentNotNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotNull(FieldTakeMoment))
}

// TakeMomentEqualFold applies the EqualFold predicate on the "take_moment" field.
func TakeMomentEqualFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEqualFold(FieldTakeMoment, v))
}

// TakeMomentContainsFold applies the ContainsFold predicate on the "take_moment" field.
func TakeMomentContainsFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContainsFold(FieldTakeMoment, v))
}

// TakeEtcEQ applies the EQ predicate on the "take_etc" field.
func TakeEtcEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTakeEtc, v))
}

// TakeEtcNEQ applies the NEQ predicate on the "take_etc" field.
func TakeEtcNEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldTakeEtc, v))
}

// TakeEtcIn applies the In predicate on the "take_etc" field.
func TakeEtcIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldTakeEtc, vs...))
}

// TakeEtcNotIn applies the NotIn predicate on the "take_etc" field.
func TakeEtcNotIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldTakeEtc, vs...))
}

// TakeEtcGT applies the GT predicate on the "take_etc" field.
func TakeEtcGT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldTakeEtc, v))
}

// TakeEtcGTE applies the GTE predicate on the "take_etc" field.
func TakeEtcGTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldTakeEtc, v))
}

// TakeEtcLT applies the LT predicate on the "take_etc" field.
func TakeEtcLT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldTakeEtc, v))
}

// TakeEtcLTE applies the LTE predicate on the "take_etc" field.
func TakeEtcLTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldTakeEtc, v))
}

// TakeEtcContains applies the Contains predicate on the "take_etc" field.
func TakeEtcContains(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContains(FieldTakeEtc, v))
}

// TakeEtcHasPrefix applies the HasPrefix predicate on the "take_etc" field.
func TakeEtcHasPrefix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasPrefix(FieldTakeEtc, v))
}

// TakeEtcHasSuffix applies the HasSuffix predicate on the "take_etc" field.
func TakeEtcHasSuffix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasSuffix(FieldTakeEtc, v))
}

// TakeEtcIsNil applies the IsNil predicate on the "take_etc" field.
func TakeEtcIsNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIsNull(FieldTakeEtc))
}

// TakeEtcNotNil applies the NotNil predicate on the "take_etc" field.
func TakeEtcNotNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotNull(FieldTakeEtc))
}

// TakeEtcEqualFold applies the EqualFold predicate on the "take_etc" field.
func TakeEtcEqualFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEqualFold(FieldTakeEtc, v))
}

// TakeEtcContainsFold applies the ContainsFold predicate on the "take_etc" field.
func TakeEtcContainsFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContainsFold(FieldTakeEtc, v))
}

// TakeAmountEQ applies the EQ predicate on the "take_amount" field.
func TakeAmountEQ(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldTakeAmount, v))
}

// TakeAmountNEQ applies the NEQ predicate on the "take_amount" field.
func TakeAmountNEQ(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldTakeAmount, v))
}

// TakeAmountIn applies the In predicate on the "take_amount" field.
func TakeAmountIn(vs ...float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldTakeAmount, vs...))
}

// TakeAmountNotIn applies the NotIn predicate on the "take_amount" field.
func TakeAmountNotIn(vs ...float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldTakeAmount, vs...))
}

// TakeAmountGT applies the GT predicate on the "take_amount" field.
func TakeAmountGT(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldTakeAmount, v))
}

// TakeAmountGTE applies the GTE predicate on the "take_amount" field.
func TakeAmountGTE(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldTakeAmount, v))
}

// TakeAmountLT applies the LT predicate on the "take_amount" field.
func TakeAmountLT(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldTakeAmount, v))
}

// TakeAmountLTE applies the LTE predicate on the "take_amount" field.
func TakeAmountLTE(v float64) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldTakeAmount, v))
}

// MedicineUnitEQ applies the EQ predicate on the "medicine_unit" field.
func MedicineUnitEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMedicineUnit, v))
}

// MedicineUnitNEQ applies the NEQ predicate on the "medicine_unit" field.
func MedicineUnitNEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldMedicineUnit, v))
}

// MedicineUnitIn applies the In predicate on the "medicine_unit" field.
func MedicineUnitIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldMedicineUnit, vs...))
}

// MedicineUnitNotIn applies the NotIn predicate on the "medicine_unit" field.
func MedicineUnitNotIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldMedicineUnit, vs...))
}

// MedicineUnitGT applies the GT predicate on the "medicine_unit" field.
func MedicineUnitGT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldMedicineUnit, v))
}

// MedicineUnitGTE applies the GTE predicate on the "medicine_unit" field.
func MedicineUnitGTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldMedicineUnit, v))
}

// MedicineUnitLT applies the LT predicate on the "medicine_unit" field.
func MedicineUnitLT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldMedicineUnit, v))
}

// MedicineUnitLTE applies the LTE predicate on the "medicine_unit" field.
func MedicineUnitLTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldMedicineUnit, v))
}

// MedicineUnitContains applies the Contains predicate on the "medicine_unit" field.
func MedicineUnitContains(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContains(FieldMedicineUnit, v))
}

// MedicineUnitHasPrefix applies the HasPrefix predicate on the "medicine_unit" field.
func MedicineUnitHasPrefix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasPrefix(FieldMedicineUnit, v))
}

// MedicineUnitHasSuffix applies the HasSuffix predicate on the "medicine_unit" field.
func MedicineUnitHasSuffix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasSuffix(FieldMedicineUnit, v))
}

// MedicineUnitIsNil applies the IsNil predicate on the "medicine_unit" field.
func MedicineUnitIsNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIsNull(FieldMedicineUnit))
}

// MedicineUnitNotNil applies the NotNil predicate on the "medicine_unit" field.
func MedicineUnitNotNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotNull(FieldMedicineUnit))
}

// MedicineUnitEqualFold applies the EqualFold predicate on the "medicine_unit" field.
func MedicineUnitEqualFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEqualFold(FieldMedicineUnit, v))
}

// MedicineUnitContainsFold applies the ContainsFold predicate on the "medicine_unit" field.
func MedicineUnitContainsFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContainsFold(FieldMedicineUnit, v))
}

// MemoEQ applies the EQ predicate on the "memo" field.
func MemoEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldMemo, v))
}

// MemoNEQ applies the NEQ predicate on the "memo" field.
func MemoNEQ(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldMemo, v))
}

// MemoIn applies the In predicate on the "memo" field.
func MemoIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldMemo, vs...))
}

// MemoNotIn applies the NotIn predicate on the "memo" field.
func MemoNotIn(vs ...string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldMemo, vs...))
}

// MemoGT applies the GT predicate on the "memo" field.
func MemoGT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldMemo, v))
}

// MemoGTE applies the GTE predicate on the "memo" field.
func MemoGTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldMemo, v))
}

// MemoLT applies the LT predicate on the "memo" field.
func MemoLT(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldMemo, v))
}

// MemoLTE applies the LTE predicate on the "memo" field.
func MemoLTE(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldMemo, v))
}

// MemoContains applies the Contains predicate on the "memo" field.
func MemoContains(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContains(FieldMemo, v))
}

// MemoHasPrefix applies the HasPrefix predicate on the "memo" field.
func MemoHasPrefix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasPrefix(FieldMemo, v))
}

// MemoHasSuffix applies the HasSuffix predicate on the "memo" field.
func MemoHasSuffix(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldHasSuffix(FieldMemo, v))
}

// MemoIsNil applies the IsNil predicate on the "memo" field.
func MemoIsNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIsNull(FieldMemo))
}

// MemoNotNil applies the NotNil predicate on the "memo" field.
func MemoNotNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotNull(FieldMemo))
}

// MemoEqualFold applies the EqualFold predicate on the "memo" field.
func MemoEqualFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEqualFold(FieldMemo, v))
}

// MemoContainsFold applies the ContainsFold predicate on the "memo" field.
func MemoContainsFold(v string) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldContainsFold(FieldMemo, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.FieldNotNull(FieldUpdatedAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PrescriptionItem) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PrescriptionItem) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PrescriptionItem) predicate.PrescriptionItem {
	return predicate.PrescriptionItem(sql.NotPredicates(p))
}
