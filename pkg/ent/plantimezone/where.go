// Code generated by ent, DO NOT EDIT.

package plantimezone

import (
	"nursing_api/pkg/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldLTE(FieldID, id))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEQ(FieldUserID, v))
}

// TimezoneName applies equality check predicate on the "timezone_name" field. It's identical to TimezoneNameEQ.
func TimezoneName(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEQ(FieldTimezoneName, v))
}

// UseAlerm applies equality check predicate on the "use_alerm" field. It's identical to UseAlermEQ.
func UseAlerm(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEQ(FieldUseAlerm, v))
}

// ScheduledAt applies equality check predicate on the "scheduled_at" field. It's identical to ScheduledAtEQ.
func ScheduledAt(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEQ(FieldScheduledAt, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEQ(FieldUpdatedAt, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v uuid.UUID) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldLTE(FieldUserID, v))
}

// TimezoneNameEQ applies the EQ predicate on the "timezone_name" field.
func TimezoneNameEQ(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEQ(FieldTimezoneName, v))
}

// TimezoneNameNEQ applies the NEQ predicate on the "timezone_name" field.
func TimezoneNameNEQ(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNEQ(FieldTimezoneName, v))
}

// TimezoneNameIn applies the In predicate on the "timezone_name" field.
func TimezoneNameIn(vs ...string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldIn(FieldTimezoneName, vs...))
}

// TimezoneNameNotIn applies the NotIn predicate on the "timezone_name" field.
func TimezoneNameNotIn(vs ...string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNotIn(FieldTimezoneName, vs...))
}

// TimezoneNameGT applies the GT predicate on the "timezone_name" field.
func TimezoneNameGT(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldGT(FieldTimezoneName, v))
}

// TimezoneNameGTE applies the GTE predicate on the "timezone_name" field.
func TimezoneNameGTE(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldGTE(FieldTimezoneName, v))
}

// TimezoneNameLT applies the LT predicate on the "timezone_name" field.
func TimezoneNameLT(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldLT(FieldTimezoneName, v))
}

// TimezoneNameLTE applies the LTE predicate on the "timezone_name" field.
func TimezoneNameLTE(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldLTE(FieldTimezoneName, v))
}

// TimezoneNameContains applies the Contains predicate on the "timezone_name" field.
func TimezoneNameContains(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldContains(FieldTimezoneName, v))
}

// TimezoneNameHasPrefix applies the HasPrefix predicate on the "timezone_name" field.
func TimezoneNameHasPrefix(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldHasPrefix(FieldTimezoneName, v))
}

// TimezoneNameHasSuffix applies the HasSuffix predicate on the "timezone_name" field.
func TimezoneNameHasSuffix(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldHasSuffix(FieldTimezoneName, v))
}

// TimezoneNameIsNil applies the IsNil predicate on the "timezone_name" field.
func TimezoneNameIsNil() predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldIsNull(FieldTimezoneName))
}

// TimezoneNameNotNil applies the NotNil predicate on the "timezone_name" field.
func TimezoneNameNotNil() predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNotNull(FieldTimezoneName))
}

// TimezoneNameEqualFold applies the EqualFold predicate on the "timezone_name" field.
func TimezoneNameEqualFold(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEqualFold(FieldTimezoneName, v))
}

// TimezoneNameContainsFold applies the ContainsFold predicate on the "timezone_name" field.
func TimezoneNameContainsFold(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldContainsFold(FieldTimezoneName, v))
}

// UseAlermEQ applies the EQ predicate on the "use_alerm" field.
func UseAlermEQ(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEQ(FieldUseAlerm, v))
}

// UseAlermNEQ applies the NEQ predicate on the "use_alerm" field.
func UseAlermNEQ(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNEQ(FieldUseAlerm, v))
}

// UseAlermIn applies the In predicate on the "use_alerm" field.
func UseAlermIn(vs ...string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldIn(FieldUseAlerm, vs...))
}

// UseAlermNotIn applies the NotIn predicate on the "use_alerm" field.
func UseAlermNotIn(vs ...string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNotIn(FieldUseAlerm, vs...))
}

// UseAlermGT applies the GT predicate on the "use_alerm" field.
func UseAlermGT(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldGT(FieldUseAlerm, v))
}

// UseAlermGTE applies the GTE predicate on the "use_alerm" field.
func UseAlermGTE(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldGTE(FieldUseAlerm, v))
}

// UseAlermLT applies the LT predicate on the "use_alerm" field.
func UseAlermLT(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldLT(FieldUseAlerm, v))
}

// UseAlermLTE applies the LTE predicate on the "use_alerm" field.
func UseAlermLTE(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldLTE(FieldUseAlerm, v))
}

// UseAlermContains applies the Contains predicate on the "use_alerm" field.
func UseAlermContains(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldContains(FieldUseAlerm, v))
}

// UseAlermHasPrefix applies the HasPrefix predicate on the "use_alerm" field.
func UseAlermHasPrefix(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldHasPrefix(FieldUseAlerm, v))
}

// UseAlermHasSuffix applies the HasSuffix predicate on the "use_alerm" field.
func UseAlermHasSuffix(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldHasSuffix(FieldUseAlerm, v))
}

// UseAlermEqualFold applies the EqualFold predicate on the "use_alerm" field.
func UseAlermEqualFold(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEqualFold(FieldUseAlerm, v))
}

// UseAlermContainsFold applies the ContainsFold predicate on the "use_alerm" field.
func UseAlermContainsFold(v string) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldContainsFold(FieldUseAlerm, v))
}

// ScheduledAtEQ applies the EQ predicate on the "scheduled_at" field.
func ScheduledAtEQ(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEQ(FieldScheduledAt, v))
}

// ScheduledAtNEQ applies the NEQ predicate on the "scheduled_at" field.
func ScheduledAtNEQ(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNEQ(FieldScheduledAt, v))
}

// ScheduledAtIn applies the In predicate on the "scheduled_at" field.
func ScheduledAtIn(vs ...time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldIn(FieldScheduledAt, vs...))
}

// ScheduledAtNotIn applies the NotIn predicate on the "scheduled_at" field.
func ScheduledAtNotIn(vs ...time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNotIn(FieldScheduledAt, vs...))
}

// ScheduledAtGT applies the GT predicate on the "scheduled_at" field.
func ScheduledAtGT(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldGT(FieldScheduledAt, v))
}

// ScheduledAtGTE applies the GTE predicate on the "scheduled_at" field.
func ScheduledAtGTE(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldGTE(FieldScheduledAt, v))
}

// ScheduledAtLT applies the LT predicate on the "scheduled_at" field.
func ScheduledAtLT(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldLT(FieldScheduledAt, v))
}

// ScheduledAtLTE applies the LTE predicate on the "scheduled_at" field.
func ScheduledAtLTE(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldLTE(FieldScheduledAt, v))
}

// ScheduledAtIsNil applies the IsNil predicate on the "scheduled_at" field.
func ScheduledAtIsNil() predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldIsNull(FieldScheduledAt))
}

// ScheduledAtNotNil applies the NotNil predicate on the "scheduled_at" field.
func ScheduledAtNotNil() predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNotNull(FieldScheduledAt))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.FieldNotNull(FieldUpdatedAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PlanTimeZone) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PlanTimeZone) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PlanTimeZone) predicate.PlanTimeZone {
	return predicate.PlanTimeZone(sql.NotPredicates(p))
}
