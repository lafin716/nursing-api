// Code generated by ent, DO NOT EDIT.

package plantimezonelink

import (
	"nursing_api/pkg/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLTE(FieldID, id))
}

// PrescriptionID applies equality check predicate on the "prescription_id" field. It's identical to PrescriptionIDEQ.
func PrescriptionID(v uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldPrescriptionID, v))
}

// TimezoneID applies equality check predicate on the "timezone_id" field. It's identical to TimezoneIDEQ.
func TimezoneID(v uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldTimezoneID, v))
}

// TimezoneName applies equality check predicate on the "timezone_name" field. It's identical to TimezoneNameEQ.
func TimezoneName(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldTimezoneName, v))
}

// UseAlert applies equality check predicate on the "use_alert" field. It's identical to UseAlertEQ.
func UseAlert(v bool) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldUseAlert, v))
}

// Meridiem applies equality check predicate on the "meridiem" field. It's identical to MeridiemEQ.
func Meridiem(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldMeridiem, v))
}

// Hour applies equality check predicate on the "hour" field. It's identical to HourEQ.
func Hour(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldHour, v))
}

// Minute applies equality check predicate on the "minute" field. It's identical to MinuteEQ.
func Minute(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldMinute, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldUpdatedAt, v))
}

// PrescriptionIDEQ applies the EQ predicate on the "prescription_id" field.
func PrescriptionIDEQ(v uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldPrescriptionID, v))
}

// PrescriptionIDNEQ applies the NEQ predicate on the "prescription_id" field.
func PrescriptionIDNEQ(v uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNEQ(FieldPrescriptionID, v))
}

// PrescriptionIDIn applies the In predicate on the "prescription_id" field.
func PrescriptionIDIn(vs ...uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldIn(FieldPrescriptionID, vs...))
}

// PrescriptionIDNotIn applies the NotIn predicate on the "prescription_id" field.
func PrescriptionIDNotIn(vs ...uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNotIn(FieldPrescriptionID, vs...))
}

// PrescriptionIDGT applies the GT predicate on the "prescription_id" field.
func PrescriptionIDGT(v uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGT(FieldPrescriptionID, v))
}

// PrescriptionIDGTE applies the GTE predicate on the "prescription_id" field.
func PrescriptionIDGTE(v uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGTE(FieldPrescriptionID, v))
}

// PrescriptionIDLT applies the LT predicate on the "prescription_id" field.
func PrescriptionIDLT(v uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLT(FieldPrescriptionID, v))
}

// PrescriptionIDLTE applies the LTE predicate on the "prescription_id" field.
func PrescriptionIDLTE(v uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLTE(FieldPrescriptionID, v))
}

// TimezoneIDEQ applies the EQ predicate on the "timezone_id" field.
func TimezoneIDEQ(v uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldTimezoneID, v))
}

// TimezoneIDNEQ applies the NEQ predicate on the "timezone_id" field.
func TimezoneIDNEQ(v uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNEQ(FieldTimezoneID, v))
}

// TimezoneIDIn applies the In predicate on the "timezone_id" field.
func TimezoneIDIn(vs ...uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldIn(FieldTimezoneID, vs...))
}

// TimezoneIDNotIn applies the NotIn predicate on the "timezone_id" field.
func TimezoneIDNotIn(vs ...uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNotIn(FieldTimezoneID, vs...))
}

// TimezoneIDGT applies the GT predicate on the "timezone_id" field.
func TimezoneIDGT(v uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGT(FieldTimezoneID, v))
}

// TimezoneIDGTE applies the GTE predicate on the "timezone_id" field.
func TimezoneIDGTE(v uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGTE(FieldTimezoneID, v))
}

// TimezoneIDLT applies the LT predicate on the "timezone_id" field.
func TimezoneIDLT(v uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLT(FieldTimezoneID, v))
}

// TimezoneIDLTE applies the LTE predicate on the "timezone_id" field.
func TimezoneIDLTE(v uuid.UUID) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLTE(FieldTimezoneID, v))
}

// TimezoneNameEQ applies the EQ predicate on the "timezone_name" field.
func TimezoneNameEQ(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldTimezoneName, v))
}

// TimezoneNameNEQ applies the NEQ predicate on the "timezone_name" field.
func TimezoneNameNEQ(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNEQ(FieldTimezoneName, v))
}

// TimezoneNameIn applies the In predicate on the "timezone_name" field.
func TimezoneNameIn(vs ...string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldIn(FieldTimezoneName, vs...))
}

// TimezoneNameNotIn applies the NotIn predicate on the "timezone_name" field.
func TimezoneNameNotIn(vs ...string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNotIn(FieldTimezoneName, vs...))
}

// TimezoneNameGT applies the GT predicate on the "timezone_name" field.
func TimezoneNameGT(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGT(FieldTimezoneName, v))
}

// TimezoneNameGTE applies the GTE predicate on the "timezone_name" field.
func TimezoneNameGTE(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGTE(FieldTimezoneName, v))
}

// TimezoneNameLT applies the LT predicate on the "timezone_name" field.
func TimezoneNameLT(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLT(FieldTimezoneName, v))
}

// TimezoneNameLTE applies the LTE predicate on the "timezone_name" field.
func TimezoneNameLTE(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLTE(FieldTimezoneName, v))
}

// TimezoneNameContains applies the Contains predicate on the "timezone_name" field.
func TimezoneNameContains(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldContains(FieldTimezoneName, v))
}

// TimezoneNameHasPrefix applies the HasPrefix predicate on the "timezone_name" field.
func TimezoneNameHasPrefix(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldHasPrefix(FieldTimezoneName, v))
}

// TimezoneNameHasSuffix applies the HasSuffix predicate on the "timezone_name" field.
func TimezoneNameHasSuffix(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldHasSuffix(FieldTimezoneName, v))
}

// TimezoneNameIsNil applies the IsNil predicate on the "timezone_name" field.
func TimezoneNameIsNil() predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldIsNull(FieldTimezoneName))
}

// TimezoneNameNotNil applies the NotNil predicate on the "timezone_name" field.
func TimezoneNameNotNil() predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNotNull(FieldTimezoneName))
}

// TimezoneNameEqualFold applies the EqualFold predicate on the "timezone_name" field.
func TimezoneNameEqualFold(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEqualFold(FieldTimezoneName, v))
}

// TimezoneNameContainsFold applies the ContainsFold predicate on the "timezone_name" field.
func TimezoneNameContainsFold(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldContainsFold(FieldTimezoneName, v))
}

// UseAlertEQ applies the EQ predicate on the "use_alert" field.
func UseAlertEQ(v bool) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldUseAlert, v))
}

// UseAlertNEQ applies the NEQ predicate on the "use_alert" field.
func UseAlertNEQ(v bool) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNEQ(FieldUseAlert, v))
}

// MeridiemEQ applies the EQ predicate on the "meridiem" field.
func MeridiemEQ(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldMeridiem, v))
}

// MeridiemNEQ applies the NEQ predicate on the "meridiem" field.
func MeridiemNEQ(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNEQ(FieldMeridiem, v))
}

// MeridiemIn applies the In predicate on the "meridiem" field.
func MeridiemIn(vs ...string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldIn(FieldMeridiem, vs...))
}

// MeridiemNotIn applies the NotIn predicate on the "meridiem" field.
func MeridiemNotIn(vs ...string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNotIn(FieldMeridiem, vs...))
}

// MeridiemGT applies the GT predicate on the "meridiem" field.
func MeridiemGT(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGT(FieldMeridiem, v))
}

// MeridiemGTE applies the GTE predicate on the "meridiem" field.
func MeridiemGTE(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGTE(FieldMeridiem, v))
}

// MeridiemLT applies the LT predicate on the "meridiem" field.
func MeridiemLT(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLT(FieldMeridiem, v))
}

// MeridiemLTE applies the LTE predicate on the "meridiem" field.
func MeridiemLTE(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLTE(FieldMeridiem, v))
}

// MeridiemContains applies the Contains predicate on the "meridiem" field.
func MeridiemContains(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldContains(FieldMeridiem, v))
}

// MeridiemHasPrefix applies the HasPrefix predicate on the "meridiem" field.
func MeridiemHasPrefix(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldHasPrefix(FieldMeridiem, v))
}

// MeridiemHasSuffix applies the HasSuffix predicate on the "meridiem" field.
func MeridiemHasSuffix(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldHasSuffix(FieldMeridiem, v))
}

// MeridiemEqualFold applies the EqualFold predicate on the "meridiem" field.
func MeridiemEqualFold(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEqualFold(FieldMeridiem, v))
}

// MeridiemContainsFold applies the ContainsFold predicate on the "meridiem" field.
func MeridiemContainsFold(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldContainsFold(FieldMeridiem, v))
}

// HourEQ applies the EQ predicate on the "hour" field.
func HourEQ(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldHour, v))
}

// HourNEQ applies the NEQ predicate on the "hour" field.
func HourNEQ(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNEQ(FieldHour, v))
}

// HourIn applies the In predicate on the "hour" field.
func HourIn(vs ...string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldIn(FieldHour, vs...))
}

// HourNotIn applies the NotIn predicate on the "hour" field.
func HourNotIn(vs ...string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNotIn(FieldHour, vs...))
}

// HourGT applies the GT predicate on the "hour" field.
func HourGT(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGT(FieldHour, v))
}

// HourGTE applies the GTE predicate on the "hour" field.
func HourGTE(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGTE(FieldHour, v))
}

// HourLT applies the LT predicate on the "hour" field.
func HourLT(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLT(FieldHour, v))
}

// HourLTE applies the LTE predicate on the "hour" field.
func HourLTE(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLTE(FieldHour, v))
}

// HourContains applies the Contains predicate on the "hour" field.
func HourContains(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldContains(FieldHour, v))
}

// HourHasPrefix applies the HasPrefix predicate on the "hour" field.
func HourHasPrefix(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldHasPrefix(FieldHour, v))
}

// HourHasSuffix applies the HasSuffix predicate on the "hour" field.
func HourHasSuffix(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldHasSuffix(FieldHour, v))
}

// HourEqualFold applies the EqualFold predicate on the "hour" field.
func HourEqualFold(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEqualFold(FieldHour, v))
}

// HourContainsFold applies the ContainsFold predicate on the "hour" field.
func HourContainsFold(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldContainsFold(FieldHour, v))
}

// MinuteEQ applies the EQ predicate on the "minute" field.
func MinuteEQ(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldMinute, v))
}

// MinuteNEQ applies the NEQ predicate on the "minute" field.
func MinuteNEQ(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNEQ(FieldMinute, v))
}

// MinuteIn applies the In predicate on the "minute" field.
func MinuteIn(vs ...string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldIn(FieldMinute, vs...))
}

// MinuteNotIn applies the NotIn predicate on the "minute" field.
func MinuteNotIn(vs ...string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNotIn(FieldMinute, vs...))
}

// MinuteGT applies the GT predicate on the "minute" field.
func MinuteGT(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGT(FieldMinute, v))
}

// MinuteGTE applies the GTE predicate on the "minute" field.
func MinuteGTE(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGTE(FieldMinute, v))
}

// MinuteLT applies the LT predicate on the "minute" field.
func MinuteLT(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLT(FieldMinute, v))
}

// MinuteLTE applies the LTE predicate on the "minute" field.
func MinuteLTE(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLTE(FieldMinute, v))
}

// MinuteContains applies the Contains predicate on the "minute" field.
func MinuteContains(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldContains(FieldMinute, v))
}

// MinuteHasPrefix applies the HasPrefix predicate on the "minute" field.
func MinuteHasPrefix(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldHasPrefix(FieldMinute, v))
}

// MinuteHasSuffix applies the HasSuffix predicate on the "minute" field.
func MinuteHasSuffix(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldHasSuffix(FieldMinute, v))
}

// MinuteEqualFold applies the EqualFold predicate on the "minute" field.
func MinuteEqualFold(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEqualFold(FieldMinute, v))
}

// MinuteContainsFold applies the ContainsFold predicate on the "minute" field.
func MinuteContainsFold(v string) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldContainsFold(FieldMinute, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.FieldNotNull(FieldUpdatedAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PlanTimeZoneLink) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PlanTimeZoneLink) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PlanTimeZoneLink) predicate.PlanTimeZoneLink {
	return predicate.PlanTimeZoneLink(sql.NotPredicates(p))
}
