// Code generated by ent, DO NOT EDIT.

package medicine

import (
	"nursing_api/pkg/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldID, id))
}

// MedicineName applies equality check predicate on the "medicine_name" field. It's identical to MedicineNameEQ.
func MedicineName(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldMedicineName, v))
}

// ItemSeq applies equality check predicate on the "item_seq" field. It's identical to ItemSeqEQ.
func ItemSeq(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldItemSeq, v))
}

// CompanyName applies equality check predicate on the "company_name" field. It's identical to CompanyNameEQ.
func CompanyName(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldCompanyName, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldDescription, v))
}

// Usage applies equality check predicate on the "usage" field. It's identical to UsageEQ.
func Usage(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldUsage, v))
}

// Effect applies equality check predicate on the "effect" field. It's identical to EffectEQ.
func Effect(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldEffect, v))
}

// SideEffect applies equality check predicate on the "side_effect" field. It's identical to SideEffectEQ.
func SideEffect(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldSideEffect, v))
}

// Caution applies equality check predicate on the "caution" field. It's identical to CautionEQ.
func Caution(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldCaution, v))
}

// Warning applies equality check predicate on the "warning" field. It's identical to WarningEQ.
func Warning(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldWarning, v))
}

// Interaction applies equality check predicate on the "interaction" field. It's identical to InteractionEQ.
func Interaction(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldInteraction, v))
}

// KeepMethod applies equality check predicate on the "keep_method" field. It's identical to KeepMethodEQ.
func KeepMethod(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldKeepMethod, v))
}

// Appearance applies equality check predicate on the "appearance" field. It's identical to AppearanceEQ.
func Appearance(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldAppearance, v))
}

// ColorClass1 applies equality check predicate on the "color_class1" field. It's identical to ColorClass1EQ.
func ColorClass1(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldColorClass1, v))
}

// ColorClass2 applies equality check predicate on the "color_class2" field. It's identical to ColorClass2EQ.
func ColorClass2(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldColorClass2, v))
}

// PillImage applies equality check predicate on the "pill_image" field. It's identical to PillImageEQ.
func PillImage(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldPillImage, v))
}

// ClassName applies equality check predicate on the "class_name" field. It's identical to ClassNameEQ.
func ClassName(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldClassName, v))
}

// OtcName applies equality check predicate on the "otc_name" field. It's identical to OtcNameEQ.
func OtcName(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldOtcName, v))
}

// FormCodeName applies equality check predicate on the "form_code_name" field. It's identical to FormCodeNameEQ.
func FormCodeName(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldFormCodeName, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldUpdatedAt, v))
}

// MedicineNameEQ applies the EQ predicate on the "medicine_name" field.
func MedicineNameEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldMedicineName, v))
}

// MedicineNameNEQ applies the NEQ predicate on the "medicine_name" field.
func MedicineNameNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldMedicineName, v))
}

// MedicineNameIn applies the In predicate on the "medicine_name" field.
func MedicineNameIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldMedicineName, vs...))
}

// MedicineNameNotIn applies the NotIn predicate on the "medicine_name" field.
func MedicineNameNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldMedicineName, vs...))
}

// MedicineNameGT applies the GT predicate on the "medicine_name" field.
func MedicineNameGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldMedicineName, v))
}

// MedicineNameGTE applies the GTE predicate on the "medicine_name" field.
func MedicineNameGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldMedicineName, v))
}

// MedicineNameLT applies the LT predicate on the "medicine_name" field.
func MedicineNameLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldMedicineName, v))
}

// MedicineNameLTE applies the LTE predicate on the "medicine_name" field.
func MedicineNameLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldMedicineName, v))
}

// MedicineNameContains applies the Contains predicate on the "medicine_name" field.
func MedicineNameContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldMedicineName, v))
}

// MedicineNameHasPrefix applies the HasPrefix predicate on the "medicine_name" field.
func MedicineNameHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldMedicineName, v))
}

// MedicineNameHasSuffix applies the HasSuffix predicate on the "medicine_name" field.
func MedicineNameHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldMedicineName, v))
}

// MedicineNameEqualFold applies the EqualFold predicate on the "medicine_name" field.
func MedicineNameEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldMedicineName, v))
}

// MedicineNameContainsFold applies the ContainsFold predicate on the "medicine_name" field.
func MedicineNameContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldMedicineName, v))
}

// ItemSeqEQ applies the EQ predicate on the "item_seq" field.
func ItemSeqEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldItemSeq, v))
}

// ItemSeqNEQ applies the NEQ predicate on the "item_seq" field.
func ItemSeqNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldItemSeq, v))
}

// ItemSeqIn applies the In predicate on the "item_seq" field.
func ItemSeqIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldItemSeq, vs...))
}

// ItemSeqNotIn applies the NotIn predicate on the "item_seq" field.
func ItemSeqNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldItemSeq, vs...))
}

// ItemSeqGT applies the GT predicate on the "item_seq" field.
func ItemSeqGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldItemSeq, v))
}

// ItemSeqGTE applies the GTE predicate on the "item_seq" field.
func ItemSeqGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldItemSeq, v))
}

// ItemSeqLT applies the LT predicate on the "item_seq" field.
func ItemSeqLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldItemSeq, v))
}

// ItemSeqLTE applies the LTE predicate on the "item_seq" field.
func ItemSeqLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldItemSeq, v))
}

// ItemSeqContains applies the Contains predicate on the "item_seq" field.
func ItemSeqContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldItemSeq, v))
}

// ItemSeqHasPrefix applies the HasPrefix predicate on the "item_seq" field.
func ItemSeqHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldItemSeq, v))
}

// ItemSeqHasSuffix applies the HasSuffix predicate on the "item_seq" field.
func ItemSeqHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldItemSeq, v))
}

// ItemSeqEqualFold applies the EqualFold predicate on the "item_seq" field.
func ItemSeqEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldItemSeq, v))
}

// ItemSeqContainsFold applies the ContainsFold predicate on the "item_seq" field.
func ItemSeqContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldItemSeq, v))
}

// CompanyNameEQ applies the EQ predicate on the "company_name" field.
func CompanyNameEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldCompanyName, v))
}

// CompanyNameNEQ applies the NEQ predicate on the "company_name" field.
func CompanyNameNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldCompanyName, v))
}

// CompanyNameIn applies the In predicate on the "company_name" field.
func CompanyNameIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldCompanyName, vs...))
}

// CompanyNameNotIn applies the NotIn predicate on the "company_name" field.
func CompanyNameNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldCompanyName, vs...))
}

// CompanyNameGT applies the GT predicate on the "company_name" field.
func CompanyNameGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldCompanyName, v))
}

// CompanyNameGTE applies the GTE predicate on the "company_name" field.
func CompanyNameGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldCompanyName, v))
}

// CompanyNameLT applies the LT predicate on the "company_name" field.
func CompanyNameLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldCompanyName, v))
}

// CompanyNameLTE applies the LTE predicate on the "company_name" field.
func CompanyNameLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldCompanyName, v))
}

// CompanyNameContains applies the Contains predicate on the "company_name" field.
func CompanyNameContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldCompanyName, v))
}

// CompanyNameHasPrefix applies the HasPrefix predicate on the "company_name" field.
func CompanyNameHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldCompanyName, v))
}

// CompanyNameHasSuffix applies the HasSuffix predicate on the "company_name" field.
func CompanyNameHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldCompanyName, v))
}

// CompanyNameIsNil applies the IsNil predicate on the "company_name" field.
func CompanyNameIsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldCompanyName))
}

// CompanyNameNotNil applies the NotNil predicate on the "company_name" field.
func CompanyNameNotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldCompanyName))
}

// CompanyNameEqualFold applies the EqualFold predicate on the "company_name" field.
func CompanyNameEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldCompanyName, v))
}

// CompanyNameContainsFold applies the ContainsFold predicate on the "company_name" field.
func CompanyNameContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldCompanyName, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldDescription, v))
}

// UsageEQ applies the EQ predicate on the "usage" field.
func UsageEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldUsage, v))
}

// UsageNEQ applies the NEQ predicate on the "usage" field.
func UsageNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldUsage, v))
}

// UsageIn applies the In predicate on the "usage" field.
func UsageIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldUsage, vs...))
}

// UsageNotIn applies the NotIn predicate on the "usage" field.
func UsageNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldUsage, vs...))
}

// UsageGT applies the GT predicate on the "usage" field.
func UsageGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldUsage, v))
}

// UsageGTE applies the GTE predicate on the "usage" field.
func UsageGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldUsage, v))
}

// UsageLT applies the LT predicate on the "usage" field.
func UsageLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldUsage, v))
}

// UsageLTE applies the LTE predicate on the "usage" field.
func UsageLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldUsage, v))
}

// UsageContains applies the Contains predicate on the "usage" field.
func UsageContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldUsage, v))
}

// UsageHasPrefix applies the HasPrefix predicate on the "usage" field.
func UsageHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldUsage, v))
}

// UsageHasSuffix applies the HasSuffix predicate on the "usage" field.
func UsageHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldUsage, v))
}

// UsageIsNil applies the IsNil predicate on the "usage" field.
func UsageIsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldUsage))
}

// UsageNotNil applies the NotNil predicate on the "usage" field.
func UsageNotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldUsage))
}

// UsageEqualFold applies the EqualFold predicate on the "usage" field.
func UsageEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldUsage, v))
}

// UsageContainsFold applies the ContainsFold predicate on the "usage" field.
func UsageContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldUsage, v))
}

// EffectEQ applies the EQ predicate on the "effect" field.
func EffectEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldEffect, v))
}

// EffectNEQ applies the NEQ predicate on the "effect" field.
func EffectNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldEffect, v))
}

// EffectIn applies the In predicate on the "effect" field.
func EffectIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldEffect, vs...))
}

// EffectNotIn applies the NotIn predicate on the "effect" field.
func EffectNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldEffect, vs...))
}

// EffectGT applies the GT predicate on the "effect" field.
func EffectGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldEffect, v))
}

// EffectGTE applies the GTE predicate on the "effect" field.
func EffectGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldEffect, v))
}

// EffectLT applies the LT predicate on the "effect" field.
func EffectLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldEffect, v))
}

// EffectLTE applies the LTE predicate on the "effect" field.
func EffectLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldEffect, v))
}

// EffectContains applies the Contains predicate on the "effect" field.
func EffectContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldEffect, v))
}

// EffectHasPrefix applies the HasPrefix predicate on the "effect" field.
func EffectHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldEffect, v))
}

// EffectHasSuffix applies the HasSuffix predicate on the "effect" field.
func EffectHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldEffect, v))
}

// EffectIsNil applies the IsNil predicate on the "effect" field.
func EffectIsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldEffect))
}

// EffectNotNil applies the NotNil predicate on the "effect" field.
func EffectNotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldEffect))
}

// EffectEqualFold applies the EqualFold predicate on the "effect" field.
func EffectEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldEffect, v))
}

// EffectContainsFold applies the ContainsFold predicate on the "effect" field.
func EffectContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldEffect, v))
}

// SideEffectEQ applies the EQ predicate on the "side_effect" field.
func SideEffectEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldSideEffect, v))
}

// SideEffectNEQ applies the NEQ predicate on the "side_effect" field.
func SideEffectNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldSideEffect, v))
}

// SideEffectIn applies the In predicate on the "side_effect" field.
func SideEffectIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldSideEffect, vs...))
}

// SideEffectNotIn applies the NotIn predicate on the "side_effect" field.
func SideEffectNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldSideEffect, vs...))
}

// SideEffectGT applies the GT predicate on the "side_effect" field.
func SideEffectGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldSideEffect, v))
}

// SideEffectGTE applies the GTE predicate on the "side_effect" field.
func SideEffectGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldSideEffect, v))
}

// SideEffectLT applies the LT predicate on the "side_effect" field.
func SideEffectLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldSideEffect, v))
}

// SideEffectLTE applies the LTE predicate on the "side_effect" field.
func SideEffectLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldSideEffect, v))
}

// SideEffectContains applies the Contains predicate on the "side_effect" field.
func SideEffectContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldSideEffect, v))
}

// SideEffectHasPrefix applies the HasPrefix predicate on the "side_effect" field.
func SideEffectHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldSideEffect, v))
}

// SideEffectHasSuffix applies the HasSuffix predicate on the "side_effect" field.
func SideEffectHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldSideEffect, v))
}

// SideEffectIsNil applies the IsNil predicate on the "side_effect" field.
func SideEffectIsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldSideEffect))
}

// SideEffectNotNil applies the NotNil predicate on the "side_effect" field.
func SideEffectNotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldSideEffect))
}

// SideEffectEqualFold applies the EqualFold predicate on the "side_effect" field.
func SideEffectEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldSideEffect, v))
}

// SideEffectContainsFold applies the ContainsFold predicate on the "side_effect" field.
func SideEffectContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldSideEffect, v))
}

// CautionEQ applies the EQ predicate on the "caution" field.
func CautionEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldCaution, v))
}

// CautionNEQ applies the NEQ predicate on the "caution" field.
func CautionNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldCaution, v))
}

// CautionIn applies the In predicate on the "caution" field.
func CautionIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldCaution, vs...))
}

// CautionNotIn applies the NotIn predicate on the "caution" field.
func CautionNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldCaution, vs...))
}

// CautionGT applies the GT predicate on the "caution" field.
func CautionGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldCaution, v))
}

// CautionGTE applies the GTE predicate on the "caution" field.
func CautionGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldCaution, v))
}

// CautionLT applies the LT predicate on the "caution" field.
func CautionLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldCaution, v))
}

// CautionLTE applies the LTE predicate on the "caution" field.
func CautionLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldCaution, v))
}

// CautionContains applies the Contains predicate on the "caution" field.
func CautionContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldCaution, v))
}

// CautionHasPrefix applies the HasPrefix predicate on the "caution" field.
func CautionHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldCaution, v))
}

// CautionHasSuffix applies the HasSuffix predicate on the "caution" field.
func CautionHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldCaution, v))
}

// CautionIsNil applies the IsNil predicate on the "caution" field.
func CautionIsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldCaution))
}

// CautionNotNil applies the NotNil predicate on the "caution" field.
func CautionNotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldCaution))
}

// CautionEqualFold applies the EqualFold predicate on the "caution" field.
func CautionEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldCaution, v))
}

// CautionContainsFold applies the ContainsFold predicate on the "caution" field.
func CautionContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldCaution, v))
}

// WarningEQ applies the EQ predicate on the "warning" field.
func WarningEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldWarning, v))
}

// WarningNEQ applies the NEQ predicate on the "warning" field.
func WarningNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldWarning, v))
}

// WarningIn applies the In predicate on the "warning" field.
func WarningIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldWarning, vs...))
}

// WarningNotIn applies the NotIn predicate on the "warning" field.
func WarningNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldWarning, vs...))
}

// WarningGT applies the GT predicate on the "warning" field.
func WarningGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldWarning, v))
}

// WarningGTE applies the GTE predicate on the "warning" field.
func WarningGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldWarning, v))
}

// WarningLT applies the LT predicate on the "warning" field.
func WarningLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldWarning, v))
}

// WarningLTE applies the LTE predicate on the "warning" field.
func WarningLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldWarning, v))
}

// WarningContains applies the Contains predicate on the "warning" field.
func WarningContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldWarning, v))
}

// WarningHasPrefix applies the HasPrefix predicate on the "warning" field.
func WarningHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldWarning, v))
}

// WarningHasSuffix applies the HasSuffix predicate on the "warning" field.
func WarningHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldWarning, v))
}

// WarningIsNil applies the IsNil predicate on the "warning" field.
func WarningIsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldWarning))
}

// WarningNotNil applies the NotNil predicate on the "warning" field.
func WarningNotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldWarning))
}

// WarningEqualFold applies the EqualFold predicate on the "warning" field.
func WarningEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldWarning, v))
}

// WarningContainsFold applies the ContainsFold predicate on the "warning" field.
func WarningContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldWarning, v))
}

// InteractionEQ applies the EQ predicate on the "interaction" field.
func InteractionEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldInteraction, v))
}

// InteractionNEQ applies the NEQ predicate on the "interaction" field.
func InteractionNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldInteraction, v))
}

// InteractionIn applies the In predicate on the "interaction" field.
func InteractionIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldInteraction, vs...))
}

// InteractionNotIn applies the NotIn predicate on the "interaction" field.
func InteractionNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldInteraction, vs...))
}

// InteractionGT applies the GT predicate on the "interaction" field.
func InteractionGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldInteraction, v))
}

// InteractionGTE applies the GTE predicate on the "interaction" field.
func InteractionGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldInteraction, v))
}

// InteractionLT applies the LT predicate on the "interaction" field.
func InteractionLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldInteraction, v))
}

// InteractionLTE applies the LTE predicate on the "interaction" field.
func InteractionLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldInteraction, v))
}

// InteractionContains applies the Contains predicate on the "interaction" field.
func InteractionContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldInteraction, v))
}

// InteractionHasPrefix applies the HasPrefix predicate on the "interaction" field.
func InteractionHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldInteraction, v))
}

// InteractionHasSuffix applies the HasSuffix predicate on the "interaction" field.
func InteractionHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldInteraction, v))
}

// InteractionIsNil applies the IsNil predicate on the "interaction" field.
func InteractionIsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldInteraction))
}

// InteractionNotNil applies the NotNil predicate on the "interaction" field.
func InteractionNotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldInteraction))
}

// InteractionEqualFold applies the EqualFold predicate on the "interaction" field.
func InteractionEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldInteraction, v))
}

// InteractionContainsFold applies the ContainsFold predicate on the "interaction" field.
func InteractionContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldInteraction, v))
}

// KeepMethodEQ applies the EQ predicate on the "keep_method" field.
func KeepMethodEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldKeepMethod, v))
}

// KeepMethodNEQ applies the NEQ predicate on the "keep_method" field.
func KeepMethodNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldKeepMethod, v))
}

// KeepMethodIn applies the In predicate on the "keep_method" field.
func KeepMethodIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldKeepMethod, vs...))
}

// KeepMethodNotIn applies the NotIn predicate on the "keep_method" field.
func KeepMethodNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldKeepMethod, vs...))
}

// KeepMethodGT applies the GT predicate on the "keep_method" field.
func KeepMethodGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldKeepMethod, v))
}

// KeepMethodGTE applies the GTE predicate on the "keep_method" field.
func KeepMethodGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldKeepMethod, v))
}

// KeepMethodLT applies the LT predicate on the "keep_method" field.
func KeepMethodLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldKeepMethod, v))
}

// KeepMethodLTE applies the LTE predicate on the "keep_method" field.
func KeepMethodLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldKeepMethod, v))
}

// KeepMethodContains applies the Contains predicate on the "keep_method" field.
func KeepMethodContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldKeepMethod, v))
}

// KeepMethodHasPrefix applies the HasPrefix predicate on the "keep_method" field.
func KeepMethodHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldKeepMethod, v))
}

// KeepMethodHasSuffix applies the HasSuffix predicate on the "keep_method" field.
func KeepMethodHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldKeepMethod, v))
}

// KeepMethodIsNil applies the IsNil predicate on the "keep_method" field.
func KeepMethodIsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldKeepMethod))
}

// KeepMethodNotNil applies the NotNil predicate on the "keep_method" field.
func KeepMethodNotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldKeepMethod))
}

// KeepMethodEqualFold applies the EqualFold predicate on the "keep_method" field.
func KeepMethodEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldKeepMethod, v))
}

// KeepMethodContainsFold applies the ContainsFold predicate on the "keep_method" field.
func KeepMethodContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldKeepMethod, v))
}

// AppearanceEQ applies the EQ predicate on the "appearance" field.
func AppearanceEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldAppearance, v))
}

// AppearanceNEQ applies the NEQ predicate on the "appearance" field.
func AppearanceNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldAppearance, v))
}

// AppearanceIn applies the In predicate on the "appearance" field.
func AppearanceIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldAppearance, vs...))
}

// AppearanceNotIn applies the NotIn predicate on the "appearance" field.
func AppearanceNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldAppearance, vs...))
}

// AppearanceGT applies the GT predicate on the "appearance" field.
func AppearanceGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldAppearance, v))
}

// AppearanceGTE applies the GTE predicate on the "appearance" field.
func AppearanceGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldAppearance, v))
}

// AppearanceLT applies the LT predicate on the "appearance" field.
func AppearanceLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldAppearance, v))
}

// AppearanceLTE applies the LTE predicate on the "appearance" field.
func AppearanceLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldAppearance, v))
}

// AppearanceContains applies the Contains predicate on the "appearance" field.
func AppearanceContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldAppearance, v))
}

// AppearanceHasPrefix applies the HasPrefix predicate on the "appearance" field.
func AppearanceHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldAppearance, v))
}

// AppearanceHasSuffix applies the HasSuffix predicate on the "appearance" field.
func AppearanceHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldAppearance, v))
}

// AppearanceIsNil applies the IsNil predicate on the "appearance" field.
func AppearanceIsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldAppearance))
}

// AppearanceNotNil applies the NotNil predicate on the "appearance" field.
func AppearanceNotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldAppearance))
}

// AppearanceEqualFold applies the EqualFold predicate on the "appearance" field.
func AppearanceEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldAppearance, v))
}

// AppearanceContainsFold applies the ContainsFold predicate on the "appearance" field.
func AppearanceContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldAppearance, v))
}

// ColorClass1EQ applies the EQ predicate on the "color_class1" field.
func ColorClass1EQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldColorClass1, v))
}

// ColorClass1NEQ applies the NEQ predicate on the "color_class1" field.
func ColorClass1NEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldColorClass1, v))
}

// ColorClass1In applies the In predicate on the "color_class1" field.
func ColorClass1In(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldColorClass1, vs...))
}

// ColorClass1NotIn applies the NotIn predicate on the "color_class1" field.
func ColorClass1NotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldColorClass1, vs...))
}

// ColorClass1GT applies the GT predicate on the "color_class1" field.
func ColorClass1GT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldColorClass1, v))
}

// ColorClass1GTE applies the GTE predicate on the "color_class1" field.
func ColorClass1GTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldColorClass1, v))
}

// ColorClass1LT applies the LT predicate on the "color_class1" field.
func ColorClass1LT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldColorClass1, v))
}

// ColorClass1LTE applies the LTE predicate on the "color_class1" field.
func ColorClass1LTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldColorClass1, v))
}

// ColorClass1Contains applies the Contains predicate on the "color_class1" field.
func ColorClass1Contains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldColorClass1, v))
}

// ColorClass1HasPrefix applies the HasPrefix predicate on the "color_class1" field.
func ColorClass1HasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldColorClass1, v))
}

// ColorClass1HasSuffix applies the HasSuffix predicate on the "color_class1" field.
func ColorClass1HasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldColorClass1, v))
}

// ColorClass1IsNil applies the IsNil predicate on the "color_class1" field.
func ColorClass1IsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldColorClass1))
}

// ColorClass1NotNil applies the NotNil predicate on the "color_class1" field.
func ColorClass1NotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldColorClass1))
}

// ColorClass1EqualFold applies the EqualFold predicate on the "color_class1" field.
func ColorClass1EqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldColorClass1, v))
}

// ColorClass1ContainsFold applies the ContainsFold predicate on the "color_class1" field.
func ColorClass1ContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldColorClass1, v))
}

// ColorClass2EQ applies the EQ predicate on the "color_class2" field.
func ColorClass2EQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldColorClass2, v))
}

// ColorClass2NEQ applies the NEQ predicate on the "color_class2" field.
func ColorClass2NEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldColorClass2, v))
}

// ColorClass2In applies the In predicate on the "color_class2" field.
func ColorClass2In(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldColorClass2, vs...))
}

// ColorClass2NotIn applies the NotIn predicate on the "color_class2" field.
func ColorClass2NotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldColorClass2, vs...))
}

// ColorClass2GT applies the GT predicate on the "color_class2" field.
func ColorClass2GT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldColorClass2, v))
}

// ColorClass2GTE applies the GTE predicate on the "color_class2" field.
func ColorClass2GTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldColorClass2, v))
}

// ColorClass2LT applies the LT predicate on the "color_class2" field.
func ColorClass2LT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldColorClass2, v))
}

// ColorClass2LTE applies the LTE predicate on the "color_class2" field.
func ColorClass2LTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldColorClass2, v))
}

// ColorClass2Contains applies the Contains predicate on the "color_class2" field.
func ColorClass2Contains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldColorClass2, v))
}

// ColorClass2HasPrefix applies the HasPrefix predicate on the "color_class2" field.
func ColorClass2HasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldColorClass2, v))
}

// ColorClass2HasSuffix applies the HasSuffix predicate on the "color_class2" field.
func ColorClass2HasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldColorClass2, v))
}

// ColorClass2IsNil applies the IsNil predicate on the "color_class2" field.
func ColorClass2IsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldColorClass2))
}

// ColorClass2NotNil applies the NotNil predicate on the "color_class2" field.
func ColorClass2NotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldColorClass2))
}

// ColorClass2EqualFold applies the EqualFold predicate on the "color_class2" field.
func ColorClass2EqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldColorClass2, v))
}

// ColorClass2ContainsFold applies the ContainsFold predicate on the "color_class2" field.
func ColorClass2ContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldColorClass2, v))
}

// PillImageEQ applies the EQ predicate on the "pill_image" field.
func PillImageEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldPillImage, v))
}

// PillImageNEQ applies the NEQ predicate on the "pill_image" field.
func PillImageNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldPillImage, v))
}

// PillImageIn applies the In predicate on the "pill_image" field.
func PillImageIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldPillImage, vs...))
}

// PillImageNotIn applies the NotIn predicate on the "pill_image" field.
func PillImageNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldPillImage, vs...))
}

// PillImageGT applies the GT predicate on the "pill_image" field.
func PillImageGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldPillImage, v))
}

// PillImageGTE applies the GTE predicate on the "pill_image" field.
func PillImageGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldPillImage, v))
}

// PillImageLT applies the LT predicate on the "pill_image" field.
func PillImageLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldPillImage, v))
}

// PillImageLTE applies the LTE predicate on the "pill_image" field.
func PillImageLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldPillImage, v))
}

// PillImageContains applies the Contains predicate on the "pill_image" field.
func PillImageContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldPillImage, v))
}

// PillImageHasPrefix applies the HasPrefix predicate on the "pill_image" field.
func PillImageHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldPillImage, v))
}

// PillImageHasSuffix applies the HasSuffix predicate on the "pill_image" field.
func PillImageHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldPillImage, v))
}

// PillImageIsNil applies the IsNil predicate on the "pill_image" field.
func PillImageIsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldPillImage))
}

// PillImageNotNil applies the NotNil predicate on the "pill_image" field.
func PillImageNotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldPillImage))
}

// PillImageEqualFold applies the EqualFold predicate on the "pill_image" field.
func PillImageEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldPillImage, v))
}

// PillImageContainsFold applies the ContainsFold predicate on the "pill_image" field.
func PillImageContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldPillImage, v))
}

// ClassNameEQ applies the EQ predicate on the "class_name" field.
func ClassNameEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldClassName, v))
}

// ClassNameNEQ applies the NEQ predicate on the "class_name" field.
func ClassNameNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldClassName, v))
}

// ClassNameIn applies the In predicate on the "class_name" field.
func ClassNameIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldClassName, vs...))
}

// ClassNameNotIn applies the NotIn predicate on the "class_name" field.
func ClassNameNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldClassName, vs...))
}

// ClassNameGT applies the GT predicate on the "class_name" field.
func ClassNameGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldClassName, v))
}

// ClassNameGTE applies the GTE predicate on the "class_name" field.
func ClassNameGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldClassName, v))
}

// ClassNameLT applies the LT predicate on the "class_name" field.
func ClassNameLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldClassName, v))
}

// ClassNameLTE applies the LTE predicate on the "class_name" field.
func ClassNameLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldClassName, v))
}

// ClassNameContains applies the Contains predicate on the "class_name" field.
func ClassNameContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldClassName, v))
}

// ClassNameHasPrefix applies the HasPrefix predicate on the "class_name" field.
func ClassNameHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldClassName, v))
}

// ClassNameHasSuffix applies the HasSuffix predicate on the "class_name" field.
func ClassNameHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldClassName, v))
}

// ClassNameIsNil applies the IsNil predicate on the "class_name" field.
func ClassNameIsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldClassName))
}

// ClassNameNotNil applies the NotNil predicate on the "class_name" field.
func ClassNameNotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldClassName))
}

// ClassNameEqualFold applies the EqualFold predicate on the "class_name" field.
func ClassNameEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldClassName, v))
}

// ClassNameContainsFold applies the ContainsFold predicate on the "class_name" field.
func ClassNameContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldClassName, v))
}

// OtcNameEQ applies the EQ predicate on the "otc_name" field.
func OtcNameEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldOtcName, v))
}

// OtcNameNEQ applies the NEQ predicate on the "otc_name" field.
func OtcNameNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldOtcName, v))
}

// OtcNameIn applies the In predicate on the "otc_name" field.
func OtcNameIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldOtcName, vs...))
}

// OtcNameNotIn applies the NotIn predicate on the "otc_name" field.
func OtcNameNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldOtcName, vs...))
}

// OtcNameGT applies the GT predicate on the "otc_name" field.
func OtcNameGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldOtcName, v))
}

// OtcNameGTE applies the GTE predicate on the "otc_name" field.
func OtcNameGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldOtcName, v))
}

// OtcNameLT applies the LT predicate on the "otc_name" field.
func OtcNameLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldOtcName, v))
}

// OtcNameLTE applies the LTE predicate on the "otc_name" field.
func OtcNameLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldOtcName, v))
}

// OtcNameContains applies the Contains predicate on the "otc_name" field.
func OtcNameContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldOtcName, v))
}

// OtcNameHasPrefix applies the HasPrefix predicate on the "otc_name" field.
func OtcNameHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldOtcName, v))
}

// OtcNameHasSuffix applies the HasSuffix predicate on the "otc_name" field.
func OtcNameHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldOtcName, v))
}

// OtcNameIsNil applies the IsNil predicate on the "otc_name" field.
func OtcNameIsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldOtcName))
}

// OtcNameNotNil applies the NotNil predicate on the "otc_name" field.
func OtcNameNotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldOtcName))
}

// OtcNameEqualFold applies the EqualFold predicate on the "otc_name" field.
func OtcNameEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldOtcName, v))
}

// OtcNameContainsFold applies the ContainsFold predicate on the "otc_name" field.
func OtcNameContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldOtcName, v))
}

// FormCodeNameEQ applies the EQ predicate on the "form_code_name" field.
func FormCodeNameEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldFormCodeName, v))
}

// FormCodeNameNEQ applies the NEQ predicate on the "form_code_name" field.
func FormCodeNameNEQ(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldFormCodeName, v))
}

// FormCodeNameIn applies the In predicate on the "form_code_name" field.
func FormCodeNameIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldFormCodeName, vs...))
}

// FormCodeNameNotIn applies the NotIn predicate on the "form_code_name" field.
func FormCodeNameNotIn(vs ...string) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldFormCodeName, vs...))
}

// FormCodeNameGT applies the GT predicate on the "form_code_name" field.
func FormCodeNameGT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldFormCodeName, v))
}

// FormCodeNameGTE applies the GTE predicate on the "form_code_name" field.
func FormCodeNameGTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldFormCodeName, v))
}

// FormCodeNameLT applies the LT predicate on the "form_code_name" field.
func FormCodeNameLT(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldFormCodeName, v))
}

// FormCodeNameLTE applies the LTE predicate on the "form_code_name" field.
func FormCodeNameLTE(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldFormCodeName, v))
}

// FormCodeNameContains applies the Contains predicate on the "form_code_name" field.
func FormCodeNameContains(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContains(FieldFormCodeName, v))
}

// FormCodeNameHasPrefix applies the HasPrefix predicate on the "form_code_name" field.
func FormCodeNameHasPrefix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasPrefix(FieldFormCodeName, v))
}

// FormCodeNameHasSuffix applies the HasSuffix predicate on the "form_code_name" field.
func FormCodeNameHasSuffix(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldHasSuffix(FieldFormCodeName, v))
}

// FormCodeNameIsNil applies the IsNil predicate on the "form_code_name" field.
func FormCodeNameIsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldFormCodeName))
}

// FormCodeNameNotNil applies the NotNil predicate on the "form_code_name" field.
func FormCodeNameNotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldFormCodeName))
}

// FormCodeNameEqualFold applies the EqualFold predicate on the "form_code_name" field.
func FormCodeNameEqualFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldEqualFold(FieldFormCodeName, v))
}

// FormCodeNameContainsFold applies the ContainsFold predicate on the "form_code_name" field.
func FormCodeNameContainsFold(v string) predicate.Medicine {
	return predicate.Medicine(sql.FieldContainsFold(FieldFormCodeName, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Medicine {
	return predicate.Medicine(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.Medicine {
	return predicate.Medicine(sql.FieldNotNull(FieldUpdatedAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Medicine) predicate.Medicine {
	return predicate.Medicine(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Medicine) predicate.Medicine {
	return predicate.Medicine(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Medicine) predicate.Medicine {
	return predicate.Medicine(sql.NotPredicates(p))
}
